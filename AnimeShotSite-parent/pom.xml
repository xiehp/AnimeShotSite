<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>xie</groupId>
	<artifactId>AnimeShotSite-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<modules>
		<module>../AnimeShotSite-core</module>
		<module>../AnimeShotSite-portal</module>
		<module>../AnimeShotSite-manage</module>
	</modules>

	<properties>
		<!-- 本项目 -->
		<xie.AnimeShotSite.version>${project.version}</xie.AnimeShotSite.version>

		<!-- 文件拷贝时的编码 -->
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- 编译时的编码 -->
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>

		<!-- Plugin的属性 -->
		<!-- <tomcat-jdbc.version>7.0.57</tomcat-jdbc.version> -->

		<!-- spring.io版本 -->
		<spring.io.version>2.0.2.RELEASE</spring.io.version>

		<!-- 主要依赖库的版本定义 -->

		<!-- 测试 -->
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- 本项目 -->
			<dependency>
				<groupId>xie</groupId>
				<artifactId>AnimeShotSite-core</artifactId>
				<version>${xie.AnimeShotSite.version}</version>
			</dependency>
			<dependency>
				<groupId>xie</groupId>
				<artifactId>AnimeShotSite-manage</artifactId>
				<version>${xie.AnimeShotSite.version}</version>
			</dependency>
			<dependency>
				<groupId>xie</groupId>
				<artifactId>AnimeShotSite-portal</artifactId>
				<version>${xie.AnimeShotSite.version}</version>
			</dependency>
			<dependency>
				<groupId>xie</groupId>
				<artifactId>AnimeShotSite-timer</artifactId>
				<version>${xie.AnimeShotSite.version}</version>
			</dependency>

			<!-- junit-io -->
			<dependency>
				<groupId>io.spring.platform</groupId>
				<artifactId>platform-bom</artifactId>
				<version>${spring.io.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	
	<build>
		<plugins>
			<!-- 定义使用jdk编译版本 UTF-8编译 -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			
			<!-- 打包前删除lib/MavenDependencies
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>ID_delete-MavenDependencies</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<filesets>
								<fileset>
									<directory>lib/MavenDependencies</directory>
								</fileset>
							</filesets>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
						</configuration>
					</execution>
				</executions>
			</plugin> -->

			<!-- 打包前向lib/MavenDependencies拷贝依赖包
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>ID_copy-MavenDependencies</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>lib/MavenDependencies</outputDirectory>
							<excludeGroupIds>${project.groupId}</excludeGroupIds>
							<excludeArtifactIds>${project.artifactId}</excludeArtifactIds>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin> -->
		</plugins>
	</build>
</project>